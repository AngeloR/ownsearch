# -----------------------------
# Infrastructure
# -----------------------------

# Redis host port exposed on the host machine.
REDIS_HOST_PORT=6379

# Connection string used by services to reach Redis.
REDIS_URL=redis://redis:6379

# Postgres/pgvector host port and credentials.
PGVECTOR_HOST_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=postgres

# Connection string used by services to reach pgvector.
DATABASE_URL=postgres://postgres:postgres@pgvector:5432/postgres

# -----------------------------
# API service configuration
# -----------------------------

# Fastify bind address and port inside the container.
API_HOST=0.0.0.0
API_PORT=8000

# Host port exposed for the API.
API_HOST_PORT=8000

# Hybrid search tuning.
API_EMBEDDING_DIMENSIONS=384
API_TEXT_WEIGHT=0.6
API_VECTOR_WEIGHT=0.4
API_RESULT_LIMIT=10

# URL prefix for all API routes (e.g. /api -> /api/search).
API_ROUTE_PREFIX=/api

# -----------------------------
# Crawler service configuration
# -----------------------------

# Seed URL to begin crawling (required).
CRAWLER_START_URL=https://example.com

# Redis connectivity and storage keys.
CRAWLER_REDIS_QUEUE_KEY=crawler:queue
CRAWLER_REDIS_DOC_PREFIX=crawler:doc

# Crawl throttling.
CRAWLER_MAX_REQUESTS=100

# -----------------------------
# Indexer service configuration
# -----------------------------

# Redis queue that supplies documents to index.
INDEXER_REDIS_QUEUE_KEY=crawler:queue

# Embedding + chunking parameters.
INDEXER_EMBEDDING_DIMENSIONS=384
INDEXER_CHUNK_SIZE=200
INDEXER_CHUNK_OVERLAP=40

# -----------------------------
# Search UI configuration
# -----------------------------

# API base URL served to the browser (relative path recommended for single-domain deploys).
SEARCH_UI_API_BASE_URL=http://localhost:8000/api

# Host port exposed for the static web UI.
SEARCH_UI_HOST_PORT=8080
